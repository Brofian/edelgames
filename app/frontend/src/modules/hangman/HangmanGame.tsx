import React, { ReactNode } from 'react';
import ModuleGameInterface from '../../framework/modules/ModuleGameInterface';
import ModuleApi from '../../framework/modules/ModuleApi';
import hangman from './Hangman';
import {GameState} from "@edelgames/types/src/modules/hangman/HMTypes";
import {EventDataObject} from "@edelgames/types/src/app/ApiTypes";
import GameWheel from "./components/gameWheel/GameWheel";
import Scoreboard from "./components/scoreboard/Scoreboard";
import InputField from "./components/inputField/InputField";

interface IState {
	gameState: GameState,
}



export default class Hangman
	extends React.Component<{}, IState>
	implements ModuleGameInterface
{
	private readonly api: ModuleApi;

	state: IState = {
		gameState: {
			phase: 'waiting',
			round: 0,
			activeGuesserId: '',
			currentHostId: '',
			letters: ['s','o','m','m','e','r','s','p',null,null,'s',null,'e','n'],
			wrongChars: [],
			configuration: {
				minWordLength: 1,
				maxWordLength: 1,
				autoGeneratedWords: false
			}
		},
	}

	constructor(props: {}) {
		super(props);
		this.api = new ModuleApi(hangman, this);
		this.api.getEventApi().addEventHandler('gameStateUpdated', this.onGameStateUpdateReceived.bind(this))
	}

	componentDidMount() {}

	componentWillUnmount() {}


	onGameStateUpdateReceived(eventData: EventDataObject): void {
		const newState = eventData as GameState;

		this.setState({
			gameState: {
				phase: newState.phase,
				round: newState.round,
				activeGuesserId: newState.activeGuesserId,
				currentHostId: newState.currentHostId,
				letters: newState.letters,
				wrongChars: newState.wrongChars,
				configuration: newState.configuration
			}
		}, console.log.bind(null, `active guesser: ${newState.activeGuesserId}`));
	}



	render(): ReactNode {

		return (
			<div id={'hangman'}>

				<GameWheel
					letters={this.state.gameState.letters}
				    playerApi={this.api.getPlayerApi()}
					activePlayerId={this.state.gameState.activeGuesserId}
				/>

				<div className={'game-data-interface'}>

					<Scoreboard />

					<InputField />

				</div>

			</div>
		);
	}


}
